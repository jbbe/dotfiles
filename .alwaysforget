***********************************
Linux

awk '{printf "\"%s\", ", $0}' <file>
// to quote up and get in a list

grep -r "pattern" .
^ to search everything recursively 
grep -v "Exclude lines with this"
grep -v -e  "Exclude this" -e "and this"
grep -Ev  "Exclude this|and this"

du -hcs .??** | sort -n
fc 
    edit last command in editor then run when saving
disown -a && exit
    keep processes running after terminal closes
rev 
    reverses bash input
yes
    prints out y
blkid
    locate /print block device atrributes
lolcat fun colors
fignet BIG
cowsay

tail 
    prints end of file
ctr-l 
    clears terminal

 ./cmd || {echo 'Build failed:(' ; exit 1;}

for file in *; do mv "$file" `echo $file | tr ' ' '_'` ; done

 netstat 
    shows all open tcp sockets

git adding origin with unrelated histories 
    git pull orign master --allow-unrelated-histories

list lines of code in repo
git ls-files | xargs wc -l 

***********************************
Mac

https://scriptingosx.com/2019/07/moving-to-zsh-06-customizing-the-zsh-prompt/

ipconfig getpacket en0

add ~/.hushlogin to supress status message at login
open
networksetup
lsof 
    list open files
lsof -i 
    lists open internet ports
osascript -e 'tell application "AppName" to quit'
osascript -e 'tell application "Finder" to sleep'
pbpaste | script.sh |pbcopy
sw_vers
    current software version (os)
scutil --dns
    dns resolution hierarchy
echo {x..y}
    print series
diskutil secureErase freespace 3 /Volumes/name-of-drive

zsh slow --> rm log files 
sudo rm -rf /private/var/log/asl/*.asl

xcode cl tools --> add instrs

sudo lsof -i -n -P | grep TCP 
Check what ports are runnign ^^
*************************************
vim 

search for foo and replace with bar
:%s foo/bar/g
:hlsearch
    highlight search
:!unix_command
:r!unix_command
    puts output directly into doc
    
Thu Mar 21 13:04:08 EDT 2019
vundle
:PluginSearch
:PluginInstall
:PluginClean
vundle
:PluginSearch
:PluginInstall
:PluginClean

*************************************
React

npx create-react-app my-app --typescript
npx nano-react-app my-app --ts

if you're getting the type for a style thats supposed to be CSSProperty
just add as React.CSSProperty after the object def.

*************************************
C#
brew cask install dotnet-sdk 
install vscode extension
right click to build

nah just use visual studio

compile for native target
    dotnet build --runtime ubuntu.18.04-x64 

*************************************
adb

adb tcpip 5555
adb connect <ip>:5555

when debuggin an api make sure you're looking at a instance that's correct.

*************************************
js

Reserved Words: 
abstract boolean break byte case catch char class const continue
 debugger default delete do double else enum export extends false final
 finally float for
 function goto if implements import in instanceof int interface long native new null
 package private protected public return short static super switch synchronized this
 throw throws transient true try typeof var volatile void while with


function isNumber(value) { return typeof value === 'number' && isFinite(value);
}

NaN === NaN // false NaN !== NaN // true

process.nextTick() ensures that a callback is invoked asynchronously

npm will run scripts of pattern pre* and post* for script * before and after script automatically.

router order matters.

vscode
*************************************
cycle windows -- shift + cmd + ~
